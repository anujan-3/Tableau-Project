<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.0g7sucu0c07vgf1ghrgre1m0ogol' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.0cwn10e117wkfy1gxkuad0iia9ei'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Anuja/Documents/SQL and Tableau Projects/Tableau Project/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0cwn10e117wkfy1gxkuad0iia9ei' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_090CBC108D0A42E59FFA54A4669154F3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_090CBC108D0A42E59FFA54A4669154F3]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_090CBC108D0A42E59FFA54A4669154F3]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/Anuja/AppData/Local/Temp/TableauTemp/#TableauTemp_0w58d1d1au9qgt18rl8h90m6jq79.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/14/2025 05:45:41 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#1976d2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#42a5f5'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#66bb6a'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ab47bc'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d32f2f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#fb8c00'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_090CBC108D0A42E59FFA54A4669154F3'>
            <properties context=''>
              <relation connection='excel-direct.0cwn10e117wkfy1gxkuad0iia9ei' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.12t3q2d13elqby124r96410dg9ft' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0g20se712f0qhl1ev4q1z1y9hn49'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Anuja/Documents/SQL and Tableau Projects/Tableau Project/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0g20se712f0qhl1ev4q1z1y9hn49' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E15D9A6A343A4F739E08319D382B4F63]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E15D9A6A343A4F739E08319D382B4F63]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E15D9A6A343A4F739E08319D382B4F63]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_E15D9A6A343A4F739E08319D382B4F63]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_E15D9A6A343A4F739E08319D382B4F63]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/Anuja/AppData/Local/Temp/TableauTemp/#TableauTemp_02w90l31ordup21g485xu0osjlzz.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/14/2025 05:45:49 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
              <object-id>[Sheet1_E15D9A6A343A4F739E08319D382B4F63]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_E15D9A6A343A4F739E08319D382B4F63]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_E15D9A6A343A4F739E08319D382B4F63]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_E15D9A6A343A4F739E08319D382B4F63]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_E15D9A6A343A4F739E08319D382B4F63'>
            <properties context=''>
              <relation connection='excel-direct.0g20se712f0qhl1ev4q1z1y9hn49' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.041cq721kuu7ro18kz1se05n5eqt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.0gg27sx1ozm71o16jnflf1fshl5l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Anuja/Documents/SQL and Tableau Projects/Tableau Project/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0gg27sx1ozm71o16jnflf1fshl5l' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_A9987C06360741CF9A5A032475417D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_A9987C06360741CF9A5A032475417D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_A9987C06360741CF9A5A032475417D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_A9987C06360741CF9A5A032475417D94]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_A9987C06360741CF9A5A032475417D94]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A9987C06360741CF9A5A032475417D94]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/Anuja/AppData/Local/Temp/TableauTemp/#TableauTemp_11z9j2c0zczigl10qbli000frz1l.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/14/2025 05:46:22 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RGB_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1206</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28901</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A9987C06360741CF9A5A032475417D94'>
            <properties context=''>
              <relation connection='excel-direct.0gg27sx1ozm71o16jnflf1fshl5l' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.1dtsj5808o2x1s1g83lf81pj4jrv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.1kvw1yw04bunv211ucn981fpgp2d'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Anuja/Documents/SQL and Tableau Projects/Tableau Project/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1kvw1yw04bunv211ucn981fpgp2d' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_0C09711B5FE24BBC9B1EEEE7BB186DBC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_0C09711B5FE24BBC9B1EEEE7BB186DBC]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_0C09711B5FE24BBC9B1EEEE7BB186DBC]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0C09711B5FE24BBC9B1EEEE7BB186DBC]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/Anuja/AppData/Local/Temp/TableauTemp/#TableauTemp_0ecxqel1cudl6e1ddq8d11fi7lxr.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/18/2025 12:27:17 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_0C09711B5FE24BBC9B1EEEE7BB186DBC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_0C09711B5FE24BBC9B1EEEE7BB186DBC]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_0C09711B5FE24BBC9B1EEEE7BB186DBC]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0C09711B5FE24BBC9B1EEEE7BB186DBC'>
            <properties context=''>
              <relation connection='excel-direct.1kvw1yw04bunv211ucn981fpgp2d' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_74244627C8374E45BC4DFD270A82B36F]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 2' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Continent' />
        <param name='target' value='Sheet 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='9'>World Figures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.1dtsj5808o2x1s1g83lf81pj4jrv' />
          </datasources>
          <datasource-dependencies datasource='federated.1dtsj5808o2x1s1g83lf81pj4jrv'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[:Measure Names]' value='239' />
            <format attr='text-format' field='[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='height' value='61' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ff557f' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ffffff' />
            <format attr='border-width' value='3' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='width-header' value='43' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='3' />
            <format attr='stroke-size' scope='cols' value='3' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B8C20E64-1E0B-405C-BB5B-DDE29BEC7A0A}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='9'>Total Death Count per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.0g7sucu0c07vgf1ghrgre1m0ogol' />
          </datasources>
          <datasource-dependencies datasource='federated.0g7sucu0c07vgf1ghrgre1m0ogol'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0g7sucu0c07vgf1ghrgre1m0ogol].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0g7sucu0c07vgf1ghrgre1m0ogol].[sum:TotalDeathCount:qk]' field-type='quantitative' max='1444426' min='-411611' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.0g7sucu0c07vgf1ghrgre1m0ogol].[sum:TotalDeathCount:qk]' value='76' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0g7sucu0c07vgf1ghrgre1m0ogol].[none:location:nk]' value='139' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='text-decoration' value='none' />
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0g7sucu0c07vgf1ghrgre1m0ogol].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0g7sucu0c07vgf1ghrgre1m0ogol].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0g7sucu0c07vgf1ghrgre1m0ogol].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{F1F2C178-CBA6-4F9B-A6EC-776CCB0C2037}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000cc' fontname='Times New Roman' fontsize='9'>Percentage of Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.12t3q2d13elqby124r96410dg9ft' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12t3q2d13elqby124r96410dg9ft'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12t3q2d13elqby124r96410dg9ft].[Longitude (generated)]' field-type='quantitative' max='18530948.776947632' min='-9059760.4381514043' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12t3q2d13elqby124r96410dg9ft].[Latitude (generated)]' field-type='quantitative' max='9624801.6541482881' min='-2976912.0457184035' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12t3q2d13elqby124r96410dg9ft].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.12t3q2d13elqby124r96410dg9ft].[none:Location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.12t3q2d13elqby124r96410dg9ft].[none:Location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.12t3q2d13elqby124r96410dg9ft].[none:Location:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.12t3q2d13elqby124r96410dg9ft].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.12t3q2d13elqby124r96410dg9ft].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.12t3q2d13elqby124r96410dg9ft].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.12t3q2d13elqby124r96410dg9ft].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.12t3q2d13elqby124r96410dg9ft].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.12t3q2d13elqby124r96410dg9ft].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.12t3q2d13elqby124r96410dg9ft].[sum:PercentPopulationInfected:qk]' value='Percentage of Population Infected Per Country'>
              <formatted-text>
                <run fontsize='8'>Percentage of Population Infected Per Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12t3q2d13elqby124r96410dg9ft].[none:Location:nk]' />
              <color column='[federated.12t3q2d13elqby124r96410dg9ft].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.12t3q2d13elqby124r96410dg9ft].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12t3q2d13elqby124r96410dg9ft].[Latitude (generated)]</rows>
        <cols>[federated.12t3q2d13elqby124r96410dg9ft].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{13BE02D8-C93D-4DD9-8B03-84EDEFAB4221}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='9'>Pecentage of Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.041cq721kuu7ro18kz1se05n5eqt' />
          </datasources>
          <datasource-dependencies datasource='federated.041cq721kuu7ro18kz1se05n5eqt'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.041cq721kuu7ro18kz1se05n5eqt].[tmn:date:qk]' scope='cols' value='Month' />
            <format attr='title' class='0' field='[federated.041cq721kuu7ro18kz1se05n5eqt].[fVal:avg:PercentPopulationInfected:qk]' scope='rows' value='Avg. Percent Pop. Infected' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.041cq721kuu7ro18kz1se05n5eqt].[tmn:date:qk]' value='75' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Location:nk]' />
              <text column='[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Location:nk]' />
              <color column='[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Forecast Indicator:nk]' />
              <text column='[federated.041cq721kuu7ro18kz1se05n5eqt].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.041cq721kuu7ro18kz1se05n5eqt].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.041cq721kuu7ro18kz1se05n5eqt].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A9D159DB-9537-447E-AA04-4200A1C290DE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97890' id='8' param='horz' type-v2='layout-flow' w='99002' x='499' y='1055'>
            <zone h='97890' id='6' type-v2='layout-basic' w='99002' x='499' y='1055'>
              <zone h='48945' id='5' name='Sheet 4' w='87907' x='499' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48945' id='13' name='Sheet 3' w='37094' x='47756' y='1055'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18470' id='15' name='Sheet 1' w='47257' x='499' y='1055'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48945' id='10' name='Sheet 4' pane-specification-id='0' param='[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Location:nk]&#10;[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Forecast Indicator:nk]' type-v2='color' w='11095' x='88406' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30475' id='16' name='Sheet 2' w='47257' x='499' y='19525'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48945' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.12t3q2d13elqby124r96410dg9ft].[sum:PercentPopulationInfected:qk]' type-v2='color' w='14651' x='84850' y='1055'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97890' id='17' param='vert' type-v2='layout-flow' w='99002' x='499' y='1055'>
                <zone fixed-size='140' h='18470' id='15' is-fixed='true' name='Sheet 1' w='47257' x='499' y='1055'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48945' id='13' is-fixed='true' name='Sheet 3' w='37094' x='47756' y='1055'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='48945' id='14' name='Sheet 3' pane-specification-id='0' param='[federated.12t3q2d13elqby124r96410dg9ft].[sum:PercentPopulationInfected:qk]' type-v2='color' w='14651' x='84850' y='1055'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='236' h='30475' id='16' is-fixed='true' name='Sheet 2' w='47257' x='499' y='19525'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48945' id='5' is-fixed='true' name='Sheet 4' w='87907' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='48945' id='10' name='Sheet 4' pane-specification-id='0' param='[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Location:nk]&#10;[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Forecast Indicator:nk]' type-v2='color' w='11095' x='88406' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5B933FCA-7D67-43DD-83C4-E66D51B527CA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dtsj5808o2x1s1g83lf81pj4jrv].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5EDB056F-4889-4DCC-BB97-D3262BD06AB9}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0g7sucu0c07vgf1ghrgre1m0ogol].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0g7sucu0c07vgf1ghrgre1m0ogol].[none:location:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{29B34F26-6003-458F-A99C-428F75406444}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12t3q2d13elqby124r96410dg9ft].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12t3q2d13elqby124r96410dg9ft].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8ADE6CC8-FFC4-4B49-A1DB-0DFC05BF1980}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Location:nk]&#10;[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.041cq721kuu7ro18kz1se05n5eqt].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD4D02EF-7355-4F66-86AC-B3A0C54C5C11}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Location:nk]&#10;[federated.041cq721kuu7ro18kz1se05n5eqt].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{00F14B15-0450-4158-A1E2-B0B4C5930603}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='85' name='Sheet 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAZ6ElEQVR4nO3deWyc+X3f8fcz88zBuUgOb/EmJR4iJYqkrt3N7nqzWyd1mjhI3cRO6rgB
      AjsG2nXRGk0DI3+0SJF/Fs1poA4KOEHboAkM1+vGC9tp7HgvHRRJUZR4DC/xPmc49/U88zz9
      g1rtrneHOkhxJM33BUggnyHn+c7w+TzXPN/np5imaSJEkbIUugAhCumxCYBhGIUuQRQhCYAo
      agcOQDoRJZt7/zAiFtklo+cwjRxbG+sk0xpgkoxH2NzZxQQyqRQGkE0nyeqy4IvCOVAAosF1
      Ri//mNXoXgC0dJR3//HHLAcTzNwcJZLWGL42jJ6JMjQ6RWx7kcDiFguT02QMjdHRMQw5BBcF
      pB7kl30VdXS3N7MLYJrMTM9wouMEBhBK5bhwqonczibrq/NUtZ+ivQqu3JjFoycZuXKFlo4z
      OG0Wcrkcpmmi6/qhvCgh7teBAvBB8Z1FZlZCVDo19IQNB2ACOcCmquSMHKZpQVHAqjqocKvE
      E0mo8GCxWDBNE6vVeljlCHFflIN8DhDcWGbqxhBxVyvnTnfidljZuT1FzNOEO7nCym6anGHl
      2XMnefsnl7A5VBpO9JFYmaelv4+poXdp7D5LhdeBruuo6qHlUYj7cqAA/PSvKorykWl70+Hu
      5Pe++cBERVEkAKIgDrTEKYpyX9P2pn/MN3l+Voij8th8DiBEIUgARFGTAIiiJgEQRU0CIIqa
      BEAUNQmAKGoSAFHUJACiqEkARFGTAIiiJgEQRU0CIIragQJg6Bkmr18hmDQxjRzz0xOMDI+w
      vhMhFQ0yMjLM7OI6pmkyNzXO8OgYqWyOrZVVNGBzeZFYRrrAROEc6HLoZDyB224SzZiUOwwq
      6ppocVm5PDSB05Kle+A8t4avkvRm2dFLOd3uZGJ6HreWwFnm5PZWjHMN0gUmCudAAfCU+dHD
      TnYBi9WG25HhyqWrNHcPsDR7C6fNSqlVZSO4TWllL84Sk2xmHbsW4ydvXeWFlz6J5U4zjGEY
      aJp2SC9LiPtzaC1YRi7LpcvXGHzmeVx2KxvzkM2ZxDE44a9maiuE5nVitzuxWUyef66LiVuT
      XBjoQVVV6QgTBXGgY4DgxhKB1TBrM2MEw7tgqkzdHGNuaZ2uE23cGL1Gib8et78Fb26D6xML
      dHUdp7TCj9tXRWulk3Aie1ivRYgHdqCe4MMkWwBRCHIaVBQ1CYAoahIAUdQkAKKoSQBEUZMA
      iKImARBFTQIgipoEQBQ1CYAoahIAUdQkAKKoSQBEUZMAiKJ2oOuPY6FNxq69S+P5T9PkMxi6
      /C4mFqpaunGmN1ncjmModp45e5JLb76LxWalqbOf5OoCjX29BK5dpaV3EJ9z/zJ2v/tdEsPD
      Byn1oXmff57SV14pyLzFo3fAlsgqejta2DUhG9/GVtrMme5arg5NgJnhwoULTAxfY3tlGm/b
      AL21VoZuzVNq5thaCmCvbMHrVO+OK5avNSF5/Trh118/SKkPTa2sxPfyywWZt3j0DjZGmMUC
      7I3zZRo6FquKoljAzGEqCgoKNhTSmobqUvcG0TNMtGyMwGyQnv4GFCBnGBiGkTcAhlG40eRN
      w5Dxi59iBwqAlk2TSKVIqXGUSj+J0DgbKymc5VU4UpusbO2wk9G4UN/NuyNTrKaclPmrYdfg
      ufMnGb08RNm5i5TYrZimmbcjzGIp3KGKxWLBZrMVbP7i0TpQAFLxCEm1Eltqk6zZzJlTnWzt
      JuntOIbFrGd5aYlT/QOoTjv93Y2Ekjk662tJVXlwWO2cHehDMw1Abo0iCuNAAfD5a/D5az4w
      xU6Lt3zvS0WlqaXt7iPe8iree8jl8ez9dIkH+0EKEOKA5DSoKGoSAFHUJACiqEkARFGTAIii
      JgEQRU0CIIqaBEAUNQmAKGoSAFHU5H7kj8jIUrJg8+455sShyrrtfkgAHpF/9vW5gs378u92
      0uSXq6zuxz1XE7F4oqDX4wvxKN0zADenZvmf3/q7+wiBye7WKuO3psnqBmYuy9StcULR1J3H
      VpicXcQEYuEwOSAR2SWZlWYTUTh5A5DNavz1t9/gb7/zfTY2d5gMzO/7RFo6zNRCkI6WCq6N
      THBz5BqVzceZGBsmmwxyY36XGpfGeGCZ1fnbZLQUYxMB7Kr0AojCyXsMYLOpqFYriqLw6hd/
      A6fDse8TWVUXZEKMjcfx17QR3opT4SmhqsTJ6toi1S0nKa+AwHoAJRvjrZ+8w+DF51Et9x4m
      tZC7YE/i8K05XUfTlEKX8UTIG4B4IsknnjvHM2f77rnwA2jxINayRvo7qhm+MYsVBcM0yWJQ
      4fISTaUxDBWLxYrN4aW3qY611U0qOpruOUyqtEQ+GKuqPnE1F0reJcvrcVNd6aexvva+nkgt
      8ZGLbTA2Pom3vILmYxUMDQ2RVj1U1B4ns36LoZFxWlrbsTscVNa348huE4pnDu3FCPGg9j8N
      mtzmh9fX+OSzfYxfe4uazgtUez/+9JrV4eGZ55770LTqxve/Pv/sz7w/vawbgM5Tgw9ZthCH
      I38AUrv81V9+k++PrLB46xSB6Wn+zdfOH2FpQjx6+QPg8PJPP/ULqPVrvHLxNDani/LSex8L
      CPEkyR8Ai0p1QwuJ7/6Ab60EwGrnVz77eerKnEdYnhCP1v7HANkoG1kfv/eVLwB7ZxeEeJrs
      v0SbVqLrE3z9618Hq4Nf/Ze/xbFy2QKIp8f+AbDaef6FFzAMEwMrDptcYSieLvsv0bYSzvSd
      ob//DGsz42QM+XRRPF3ucQyQ5PLlSxgmbIWjpLM5QD5hFE+P/QNg9/DiCy8Q2g3z8s/9AtV+
      2f8XT5f9A6Dk+N9/+d8pq29hZe0HvPrv/y0+uxwHPI2M6b/FeOf3CzJv5dizWH/+mwWZ9/4B
      SGyyYdbyld/8Tf7qz/6A1VAaX63riEoTRyoTgd1AYebtbSrMfLnXQbCnkZc67Lz22mvoVf2c
      qC45orKEOBr5twBmhh/9aIhPfuZf8UlMrr39Y5Ia+ORqCPEUyb8FiG/wo5HpO98ozE4Os7gd
      P5qqhDgi+bcA3gZaLKt886+/RamaYnLLzi/XefM/k2myND/FdiRFXWM7bmJM317D6ankVFcL
      N0evkdRMuk4NEFtfprq9lfWZafyNx/HeY5hUIR6VfZY8K7/9777G7dkZkjmVX/pMO7Z92nf1
      TJSNUJauzhO4PR5GhiboP3eRW8NXiWznyHpaGGy0MxqYxZvLUBJaJ5hRaZKFXxTQPU6DWmlq
      77gzfKmBaVpQlI//NFhLRQiFE2ysLbGbBAMF1aLgUiwEIxHcvkasqomuZdG0GJevbvDsCy+j
      gPQEH7KH6gk2chTqc37DNDEK9B7vH4BMiP/0n1+joqYWVAef+dwX8l4MZ3f7KfXu0NbeztXh
      cdxWiKc1wrrOqZpmrs+vkrCXUOL2YUuZvPDiaW6M3eDC+QHpCT5kD9MTbFisFGo1Y1EUrAV6
      j/MGwDAMcjkdV1UbX/7yF0BRUK3594GsdjcdLVWM35qmq6cXj1Vjcuomtc0dOL1+GnwB5lYj
      nDzZSWx7m5KSUnra6oinspS55dSSKIy8AVidGeX1v7+EmY7zjW98A6wO/vnn9muIUaiobaSi
      9r1G4BL6zvTffbSxrZP3Hqmo3Rtataz62CG8BCEeXt4ANHYO8q/rj/Hty4v8yisXGXrzBxgF
      20sU4tHIfwyQ3OGP/uTPeGtik8C1H7O2GeQ/9v3sEZYmxKOXPwAlFbz66qt0XV/lZ8/3oigK
      NpucshRPl/xLtKJgLXEx9L2/4R/+7m+IRpL8/h++RqO0RIrHgGGapA7hvsr7r9L1NPbaLl5s
      dHFjbBTdkEuhxeNhJ2nyudfTB36e/QPgrOZ3Pv+LBENB6lp7ZNAF8dTZPwBahD//kz+Fymaa
      rUEqWjpplRCIp8j++zRagojhpqPBTzASv3NJhBBPj/0D4DrGlz/7Mnomy/mf/3Va/fKJrXi6
      7BuAhZuX+O7/e5edrQ2yhkKe6+CEeGLlD4AW5i/+1w/5rS9+iS998be59r3/wUr0yboqUoh7
      yX8QHA+RsrtZWdgb7tPhtLITTtLgKz2q2oR45PIHwF3Np184w9raGgBdZ1+ipULuCCGeLvkD
      YPfw0suvPNCTmWaOa2/9hPpTF3Flg0wvreN0+znd3cb4yBApHTp6+4mvL1NzvI3V6Ukqmjvw
      SVeYKJC8S97uxhLXJz8w2rlFZeDcRUpd+RsXtpbnMFUHyazO6u1VBs5d2GuJ3DLQfW0MNtgY
      nZ7Da2SIBtcI6w5aZOEXBZR36VPtDsrLy9+fYLGiWvKfBsplkyzvZGiuLSMG6HC3JTIUi+Ly
      Nu21ROp7LZFXhjZ55vmXpCXyESiGlshc7nDmnTcAXn8NZ8pK+Ys//mOWI0nSGYOv/O7XcOdZ
      Y2cSEbRsisnABrkyE78VYuksu5pOX00LI7PLxG0luNyl2FImL77Yx9j1G1y4MCgtkYesGFoi
      rVkDOPiKaf/9j9gqS0Ytn/hEC1szw2Rz+dcRrvI6nrlYRzK8Q9bmw23JMDk9QX1bFw5PGc3l
      syxsxDnZ1UFsx4WzxEfviXppiRQFtX8AfE28PNiOmzCjCQd+971T6iqrZO9ckZ3TfWfuTq9v
      OUH9na/9NdUAlFbWPVzVQhyS/QMQ32Y7a+Wln/tFTOUN4mmdspJ9bg4kxBNmn5bIbV77oz/l
      naktZoZ+xGYwwu8N/JMjLE2IRy9/AFxVfPWrX+Xk5WkaK700tJ2g3PNkHQwKcS/3GCPMzrvf
      /7+sb23yX//wv7CVOIQeNCEeI/foB4ijlVQxODBAjU8ldhhNmEI8Ru7ZD/D5T/Xzf779HTp+
      5tO0VUpDvHi65D8GiK3y3743xu989lP0XjjCioQ4QvkDoGd45x/ewNxd3PveaueXf/U39rk1
      ohBPnn0/Bzh2/BS/9mv/4s53Cl6vNMSLp0v+AHjq+NKv/xJ+v/8IyxHiaOUPgK2EtkYZFVI8
      3eRWb6KoSQBEUTvUAGiZFOFwBN0wME2DaCRMRssBJtl0kmgsgQlo2SwmoGez6AVsdhHi0PoR
      c3qa6elZSkpUAgsmFfY0Saub3eA0z53r4dKVMSpK7TgrW9G3Vmg+08vN4WF6Bs+jysklUSCH
      FgCr6qT3VC9bK7NEMhZ24jHOne9keniI9dVZKo+fobtKYejmLB49w8T1EWraT+KyWzEMA9M0
      yeXpcyvkLRmNfep6XO2N7/ZgNZtm4bbEJg/+HhvG4SwTh9eRbpoEbo2QVsvpO9nKtaGdvcns
      tbyZmHCn61RRLFitoGkfvrYo3xCshaTweNa1n4erWaGQd3590HoP609yaMcAWjrE1NwWDkVj
      fStITamTsfGbhDSFmoYThGZGGbtxg5q6RixWG52nBwgvT7GbyGKx7I0/bLFYPvZfIRfA/era
      718hKQ9Rb0HfYx78PT6seg9tC6A6y3nllRcwAatqw1HjpyaVxuZwYrUqPPvcBbScidPpwKjy
      YlGs9J+7gCknokQBHVoAFMWCy+3+0LQS1/t3klNtdtQ7/TTWO3d/UKxyTyBRWLL6FUVNAiCK
      mgRAFDUJgChqEgBR1CQAoqhJAERRkwCIoiYBEEVNAiCKmgRAFDUJgChqEgBR1I4kAKZpsjQ3
      yfUbt8joBjvrG+jAzvoq8YzccFcUzpEEIBdfYzXm4ERDORPTC+ysb5BKhpld3cFllxFnROEc
      yQX58eAW5bXduLwm6fltVC3Gm29e5rkXX8GiKHeHSY3H4x9f5HPP4a2puWcXkAlwCP3DH5yP
      paeHRCLx4fncxzz+w0vee82Fe45Lat7974HYzDTxeHZvLvfROWWaJqbvFOa5P3jgeb3nfvqz
      8r0SxduEkudvD6Cq6t2e4ffee0WHL3QefO9BMY+g4zwbmmd8283pJgdjgQ08uTRVLTXMLUU4
      19eForDvMKlCPCpHsgtkK2/BmVxiZDxAR+dxPGWleP21HPNCKJ45ihKE+FhHsgW4H7IFEIUg
      p0FFUZMAiKImARBFTQIgipoEQBQ1CYAoahIAUdQkAKKoSQBEUZMAiKImARBFTQIgipoEQBQ1
      CYAoaod2/bGhZ7h5YxwtZ+AoraHKkWFhM4xidXGuv5Ohdy9hWKy0dp8hsbZIQ083c9dHaOjq
      w+eUy6BFYRxaP4BpGpgmaMldRibXsOYSDF64wMTwELW1btb0enrrrAxPLOIzdbw1XsJpJyfb
      61GQfgBRGAdf4rQkozenaTlxEi28TGA5zODZfsZGrmFRFOxYiKfT2D0OLBYwjBxaNsb4xBYD
      F164u/AbhoGmaQd/RUI8gIMHwOaiv78fPRvj0mKYZy72Y1EUvKrJTjTBTibD+fouLo3NUJVz
      4SmtRI2avHjuHMOXRyi9eBGHqsoWQBTEoe0C5fQUU7cC6IDXX0PrsQpmAgEqG9rxex2Et9fZ
      jOp0tDcRD0dwlZWixSNo1hK8JXYJgCgI6QkWRU1Og4qiJgEQRU0CIIqaBEAUNQmAKGoSAFHU
      JACiqEkARFGTAIiiJgEQRe1wA2CazE/dZDeRIZuMcuP6KEvrQUzTZHl+mrHxSTK6QXBjEx0I
      bqzJGGGioA41APHQGkvLawTjGW7dvEVrVy/rC9Oko2ssR6y01/uYCNxme22dVCrCzPKWjBEm
      CurgAdAzzM/PE0umCCxs0NFWD0DaVPA4bZTbbaxvreOva8Dt9ZNOxtAye2OEdfb0YLmPMayE
      eFQOHgCLFb/fjx7ZYCeaJDAzx+LCElZAN0ySpklFaRnJaJScnsFms2NzeLlwtpfZmfnDGNNO
      iId26JdDhzeWSDkrcWu7TN5exeWtorezmZuj10hq0HW6n9jaMtXtrWzMTuGuaaPC65DLoUVB
      PBb9AO+1RN7PkJ5CHKbHIgCwFwIhjtpjtc/xpO0CPWm7bYZhAGCxPDkf/zzq9/ix2QKYpvnE
      7QI9aTXfHWX9Cav5Udb72KwKnqQ/ynsOUrOZ08houUOs5t4URTlQzZl0hqNeWz7q5eKxCcDD
      SIc3+Mc332ZkZIStcKKgtVx+8+9Z3YlBNsTYxHLen5uauEFGNzCiK0ytxT/yeGDsXcYCqw84
      d4Pt7Z0H+g0tscuVK1e5NnSV7Uhq358duzEGwOzkFB+5c5Op88PXv0NUMx5o/nomwW7kaP5m
      RjbGG2/8kGT2wyucnJZ+vI4BHpSZ06hr7aSzsQqAiYlJTp7s4ProLeorHUwv71Lb0EJye5Gs
      oVBe20IquEhOsZFI5Rjs7+L6yBiGYqX3zABep+2ha7F7y9lcmqP2ZD2pVJb1xQDL2zEUi4Pu
      1irGJ2dxestZnp0ikjDobfGxELhFes2kuWuA2vISMLIkTB9GdAPDrOf6lbewOt3shKKUeZx4
      a1spyQZZ303gKq2iTEuxmo1SVdNGJhyk1KUyOj6F01tOS10Zc7dXyZoqFwdPf6Te+O4mFm8N
      A91NKMDUjWHiWQNXWS0eJYq/sYflmRtUVVYxOTmJzVWGnolxY3SUbMbg/IVBVAViG4s09fYw
      N7PK6eOVvP3OOzgddjTFiZnT6T87SGBsGB1o6uhne+Em0aRGd2cbuxkLmcgaS5sRqo41oSR3
      2AnHKK9ro72h6qH/Fj9te32d9tZjLG2GafVluXprBV9ZGSdba57sLQDA7cAtRkZGCEbTZDJZ
      ANLpNHo6SWVTJ61+hZy7jrPnzhFcXySLjb6+M7RWqgRm5kmYDtyWNHOroYMVoqg0VblY2owA
      sLYV5dzZQSodKXZiGVRPNWd6T9LY1ETfmdM4VYWWjh5O97QRCUYBiGwsEYqnCG1vEs3oWB0e
      +vpOU1FWwWBfN/FEgtmF25T6fKzenieTjlHT0kvbsQqymQzrKwu09gzS19OJhb3dh7WNjY8t
      t6y+g2Mujctvv8laMEbSUDk7eJbE7gbZbAbDhEwmg6u8mubmFk4eb0Z1eDh9pp9qt4X0nZXp
      zO0V9EyOzbU5TNPAX9tIb9dxao4101rnJ7azzHrcpLTUy2xgilg8xdmLF3HZQNN1VrbCnD07
      SGt9NQAWRWF1bf1gf4ufsri4jI7CylwAFAXTNHF7PGAYT34AWjp6GBgYoMLnJJfTyabiRBNp
      FNVGqdeDxeEmFQmSScUwLHYwcug5na3dFFUVpXhcHhrbOmms8h24lsqG44RWZzEAKxrxVJZw
      TMPlsFJeVoqigKpAVs9hmvDTe7frOzHOnO7m4rmTLCzcWQiUu/8B4PH4qKypo6enC4tip6zc
      /YHHvISCIVLJBHPzi3R0n8STZ6uWioVxVzbQ19PE+mqITCpJNptCMywoJuhalmAoDOydPcoZ
      xl4dHyza1DBtPlqbG2ksKyGS/ehrsjo9eEpKqKur53hbM26vD4f6/mJnt5jE0xqJZJTNYJLO
      tiYslsPb7zeyMay+OlqaWqhwW0mbTvr7+wgv3ybNY3QW6GHomQS3JqfJGdDQ1oktu8tqKEVl
      eRmlbhvYfZTYLURDm9xeC9HZ1cnN0SvY7C5qm9qpKnOzsTzPTjxHZ8dx7OrDrw9Cu7v4y8uJ
      724Sy5VQXWpneipAZUMrfpeVlG7B63aip+NMTC9woqOFtOHAa8+RTIPP62QnGKKiogIFk+2d
      HVSLlXJ/GbuhKOWlbkLxDB67yXRgjopjLfisJnZ/OXZMdkNhysrLWFucJYmLxioPgbkV/DXV
      NNR8dHfC0LPMzgTQLC66O1rJxHeZWVijvaMTm5lmeuY2Pn8F9XW1RHfW2EqY1JZ58PnLSYRD
      OH1+1FyKUNKkotSFnooQ1WxYTB2PUyWpK6iGhsXpJhlaZ2kjTEdXJ5lEnHJ/OblsingWPA6F
      6akAVY3t5GKbxDQVf7mPivKygywad2npOEldpdTjJBkJYdhdrMwFKPEfo7Hax/8HsPKKmXfG
      Zw4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
